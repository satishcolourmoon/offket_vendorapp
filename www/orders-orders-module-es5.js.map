{"version":3,"sources":["webpack:///src/app/orders/orders.page.html","webpack:///src/app/orders/orders-routing.module.ts","webpack:///src/app/orders/orders.module.ts","webpack:///src/app/orders/orders.page.scss","webpack:///src/app/orders/orders.page.ts"],"names":["routes","path","component","OrdersPageRoutingModule","imports","forChild","exports","OrdersPageModule","declarations","OrdersPage","camera","util","router","actRoute","loadingCtrl","actionSheetController","file","api","modalController","currentSegment","no_neworders","no_processingorders","no_transitorders","no_completeorders","selectOrder","new_order","processing_order","transmit_order","completedorder","uType","localStorage","getItem","vendor_id","snapshot","paramMap","get","event","console","log","ngOnInit","setTimeout","target","complete","getpackageReport","getOrderslist","shopId","catObj","action","getPackageReport","response","status","pack_type","navigate","orderObj","create","spinner","message","loading","present","fetchOrderslist","dismiss","no_neworders1","orders","length","process_orders","no_processingorders1","transmit_orders","no_transitorders1","completed_orders","no_completeorders1","value","chk","getProceOrdersList","getTransmitOrdersList","getCompletedOrdersList","oid","orderid","aObj","doacceptOrder","presentToast","confirmPickup","componentProps","modal","onDidDismiss","then","data","caObj","docancelOrder","selector","template"],"mappings":"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","file":"orders-orders-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar style=\\\"--background: #05274d;color: #fff;\\\">\\r\\n    <ion-menu-button defaultHref slot=\\\"start\\\"></ion-menu-button>\\r\\n    <ion-title>Orders</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-segment scrollable [(ngModel)]=\\\"selectOrder\\\" name=\\\"selectOrder\\\">\\r\\n    <ion-segment-button value=\\\"pending\\\" (click)=\\\"showOrder('neworder')\\\">\\r\\n      <ion-icon name=\\\"reader-outline\\\" style=\\\"margin: 4px;\\\"></ion-icon>\\r\\n      New Orders\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"processing\\\" (click)=\\\"showOrder('processing')\\\">\\r\\n      <ion-icon name=\\\"ellipsis-horizontal-circle-outline\\\" style=\\\"margin: 4px;\\\"></ion-icon>\\r\\n      Processing\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"intransit\\\" (click)=\\\"showOrder('intransit')\\\">\\r\\n      <ion-icon name=\\\"ellipsis-horizontal-circle-outline\\\" style=\\\"margin: 4px;\\\"></ion-icon>\\r\\n      In-Transit\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"completed\\\" (click)=\\\"showOrder('completed')\\\">\\r\\n      <ion-icon name=\\\"checkmark-circle\\\" style=\\\"margin: 4px;\\\"></ion-icon>\\r\\n      History\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n<ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"chevron-down-circle-outline\\\"\\r\\n      pullingText=\\\"Pull to refresh\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"Refreshing...\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <!-- <div  >\\r\\n    <div>\\r\\n    <ion-card >\\r\\n      <ion-card-content >\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">#4445555</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">23-09-2034</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">online</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">frttg</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">active</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;55555</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"2\\\"></ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button color=\\\"secondary\\\" (click)=\\\"aceptOrder(ord.id)\\\">Accept</ion-button>\\r\\n          </ion-col>\\r\\n\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button  color=\\\"danger\\\" (click)=\\\"cancelOrder(ord.id)\\\">Cancel</ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"2\\\"></ion-col>\\r\\n     </ion-row>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n    </div>\\r\\n  </div> -->\\r\\n\\r\\n  <div  *ngIf=\\\"new_order==true\\\">\\r\\n    <div *ngIf=\\\"no_neworders1==true\\\">\\r\\n    <ion-card *ngFor=\\\"let ord of orders\\\" >\\r\\n      <ion-card-content >\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.id}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.created_date}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.payment_type}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.payment_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.service_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;{{ord.amount}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row *ngIf=\\\"ord.is_store=='yes'\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Pick Up the Store</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.is_store}}</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        \\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"2\\\"></ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button color=\\\"secondary\\\" (click)=\\\"aceptOrder(ord.id)\\\">Accept</ion-button>\\r\\n          </ion-col>\\r\\n\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button  color=\\\"danger\\\" (click)=\\\"cancelOrder(ord.id)\\\">Cancel</ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"2\\\"></ion-col>\\r\\n     </ion-row>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n    </div>\\r\\n     <ion-card *ngIf=\\\"no_neworders1==false\\\">\\r\\n         <h3 style=\\\"text-align: center;color: #e44424;font-size:16px;\\\">No Orders</h3>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n   <div *ngIf=\\\"processing_order==true\\\">\\r\\n    <div *ngIf=\\\"no_processingorders1==true\\\">\\r\\n    <ion-card *ngFor=\\\"let pord of process_orders\\\">\\r\\n      <ion-card-content>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.id}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.created_date}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.payment_type}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.payment_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.service_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;{{pord.amount}}</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row *ngIf=\\\"pord.is_store=='yes'\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Pick Up the Store</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.is_store}}</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button color=\\\"secondary\\\" (click)=\\\"pickupOrder(pord.id)\\\">Pick up Order</ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button  color=\\\"danger\\\"  (click)=\\\"goOrderDetails(pord.id)\\\">View</ion-button>\\r\\n          </ion-col>\\r\\n          \\r\\n     </ion-row>\\r\\n\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n    <ion-card *ngIf=\\\"no_processingorders1==false\\\">\\r\\n         <h3 style=\\\"text-align: center;color: #e44424;font-size:16px;\\\">No Processing Orders</h3>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"transmit_order==true\\\">\\r\\n    <div *ngIf=\\\"no_transitorders1==true\\\">\\r\\n      \\r\\n    <ion-card *ngFor=\\\"let tord of transmit_orders\\\">\\r\\n      <ion-card-content>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.id}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.created_date}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.payment_type}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.payment_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.service_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;{{tord.amount}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row *ngIf=\\\"tord.is_store=='yes'\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Pick Up the Store</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.is_store}}</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n         <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button color=\\\"secondary\\\" (click)=\\\"confirmdelivery(tord.id)\\\">Complete Order</ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"2\\\">\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button  color=\\\"danger\\\"  (click)=\\\"goOrderDetails(tord.id)\\\">View</ion-button>\\r\\n          </ion-col>\\r\\n         </ion-row>\\r\\n\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n    </div>\\r\\n    <ion-card *ngIf=\\\"no_transitorders1==false\\\">\\r\\n         <h3 style=\\\"text-align: center;color: #e44424;font-size:16px;\\\">No In-Transit Orders</h3>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"completedorder==true\\\">\\r\\n    <div *ngIf=\\\"no_completeorders1==true\\\">\\r\\n\\r\\n    <ion-card *ngFor=\\\"let cord of completed_orders\\\">\\r\\n      <ion-card-content  (click)=\\\"goOrderDetails(cord.id)\\\">\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.id}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.created_date}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.payment_type}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.payment_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.service_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;{{cord.amount}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row *ngIf=\\\"cord.is_store=='yes'\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Pick Up the Store</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.is_store}}</ion-col>\\r\\n        </ion-row>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n    <ion-card *ngIf=\\\"no_completeorders1==false\\\">\\r\\n         <h3 style=\\\"text-align: center;color: #e44424;font-size:16px;\\\">No Completed Orders</h3>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n \\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OrdersPage } from './orders.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrdersPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrdersPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OrdersPageRoutingModule } from './orders-routing.module';\r\n\r\nimport { OrdersPage } from './orders.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    OrdersPageRoutingModule\r\n  ],\r\n  declarations: [OrdersPage]\r\n})\r\nexport class OrdersPageModule {}\r\n","export default \"ion-segment {\\n  --color: #040404;\\n  /* height: 30px; */\\n  border-bottom: 1px solid #05274d6e;\\n  font-size: 12px;\\n}\\n\\nion-segment-button {\\n  --color: #0e0e0e;\\n  --indicator-color: #e44424;\\n  --background-checked: #ffffff;\\n  --color-checked: #e44424;\\n  --indicator-height: 3px;\\n  /* min-height: 30px; */\\n  text-transform: capitalize;\\n  --padding-bottom: 10px;\\n  --padding-top: 5px;\\n  font-size: 12px;\\n}\\n\\n.orderInfoKey {\\n  font-weight: bold;\\n  color: black;\\n  font-size: 13px;\\n}\\n\\n.orderData {\\n  text-align: right;\\n  color: black;\\n  font-size: 13px;\\n}\\n\\n.vendor-head {\\n  font-size: 16px;\\n  font-weight: 600;\\n  padding-inline: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3JkZXJzL0Q6XFxpb25pY3Byb2plY3RzXFxvZmZrZXRfdmVuZG9yYXBwX2lvbmljdjUvc3JjXFxhcHBcXG9yZGVyc1xcb3JkZXJzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvb3JkZXJzL29yZGVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0NBQUE7RUFDQSxlQUFBO0FDQUY7O0FERUE7RUFDRSxnQkFBQTtFQUNBLDBCQUFBO0VBQ0EsNkJBQUE7RUFDQSx3QkFBQTtFQUNBLHVCQUFBO0VBQ0Esc0JBQUE7RUFDQSwwQkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FDQ0Y7O0FEQ0E7RUFDTSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDRU47O0FEQUE7RUFDRSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDR0Y7O0FEREE7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQ0lGIiwiZmlsZSI6InNyYy9hcHAvb3JkZXJzL29yZGVycy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tc2VnbWVudHtcclxuICAvLyAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChicm93biAsIGJyb3duKTsgXHJcbiAgLS1jb2xvcjogIzA0MDQwNDtcclxuICAvKiBoZWlnaHQ6IDMwcHg7ICovXHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwNTI3NGQ2ZTtcclxuICBmb250LXNpemU6MTJweDtcclxufVxyXG5pb24tc2VnbWVudC1idXR0b257XHJcbiAgLS1jb2xvcjogIzBlMGUwZTtcclxuICAtLWluZGljYXRvci1jb2xvcjogI2U0NDQyNDtcclxuICAtLWJhY2tncm91bmQtY2hlY2tlZDogI2ZmZmZmZjtcclxuICAtLWNvbG9yLWNoZWNrZWQ6ICNlNDQ0MjQ7XHJcbiAgLS1pbmRpY2F0b3ItaGVpZ2h0OiAzcHg7XHJcbiAgLyogbWluLWhlaWdodDogMzBweDsgKi9cclxuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAtLXBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gIC0tcGFkZGluZy10b3A6IDVweDtcclxuICBmb250LXNpemU6MTJweDtcclxufVxyXG4ub3JkZXJJbmZvS2V5e1xyXG4gICAgICBmb250LXdlaWdodDogYm9sZDsgICAgIFxyXG4gICAgICBjb2xvcjpibGFjazsgICBcclxuICAgICAgZm9udC1zaXplOjEzcHg7ICBcclxufVxyXG4ub3JkZXJEYXRhe1xyXG4gIHRleHQtYWxpZ246cmlnaHQ7XHJcbiAgY29sb3I6YmxhY2s7XHJcbiAgZm9udC1zaXplOjEzcHg7XHJcbn1cclxuLnZlbmRvci1oZWFke1xyXG4gIGZvbnQtc2l6ZToxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OjYwMDtcclxuICBwYWRkaW5nLWlubGluZTowcHg7XHJcbn0iLCJpb24tc2VnbWVudCB7XG4gIC0tY29sb3I6ICMwNDA0MDQ7XG4gIC8qIGhlaWdodDogMzBweDsgKi9cbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwNTI3NGQ2ZTtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG5pb24tc2VnbWVudC1idXR0b24ge1xuICAtLWNvbG9yOiAjMGUwZTBlO1xuICAtLWluZGljYXRvci1jb2xvcjogI2U0NDQyNDtcbiAgLS1iYWNrZ3JvdW5kLWNoZWNrZWQ6ICNmZmZmZmY7XG4gIC0tY29sb3ItY2hlY2tlZDogI2U0NDQyNDtcbiAgLS1pbmRpY2F0b3ItaGVpZ2h0OiAzcHg7XG4gIC8qIG1pbi1oZWlnaHQ6IDMwcHg7ICovXG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAtLXBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAtLXBhZGRpbmctdG9wOiA1cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLm9yZGVySW5mb0tleSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cblxuLm9yZGVyRGF0YSB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cblxuLnZlbmRvci1oZWFkIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBwYWRkaW5nLWlubGluZTogMHB4O1xufSJdfQ== */\";","import { Component, OnInit,ViewChild  } from '@angular/core';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { ModalController, Platform, ActionSheetController, LoadingController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UtilService } from 'src/app/services/util.service';\r\n\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\nimport { IonContent } from '@ionic/angular';\r\nimport { SelectdeliveryBoyPage } from '../selectdelivery-boy/selectdelivery-boy.page';\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.page.html',\r\n  styleUrls: ['./orders.page.scss'],\r\n})\r\nexport class OrdersPage implements OnInit {\r\n  currentSegment = 'pending';\r\n  orders:any;\r\n  new_order:any;\r\n  processing_order:any;\r\n  transmit_order:any;\r\n  completedorder:any;\r\n  process_orders:any;\r\n  vendor_id:any;\r\n  selectOrder:any;\r\n  transmit_orders:any;\r\n  completed_orders:any;\r\n  no_neworders:any;\r\n  no_processingorders:any;\r\n  no_transitorders:any;\r\n  no_completeorders:any;\r\n  no_neworders1:any;\r\n  no_processingorders1:any;\r\n  no_transitorders1:any;\r\n  no_completeorders1:any;\r\n   pack_type:any;\r\n   shopId:any;\r\n  constructor(private camera: Camera, private util: UtilService, private router: Router, private actRoute: ActivatedRoute,\r\n    private loadingCtrl: LoadingController, private actionSheetController: ActionSheetController,\r\n    private file: File, private api: ApiService, public modalController: ModalController) { \r\n          this.no_neworders=false;\r\n          this.no_processingorders=false;\r\n          this.no_transitorders=false;\r\n          this.no_completeorders=false;\r\n    }\r\n\r\n  ngOnInit() \r\n  {\r\n    this.selectOrder='pending';\r\n    this.new_order=true;\r\n    this.processing_order=false;\r\n    this.transmit_order=false;\r\n    this.completedorder=false;\r\n    let uType = localStorage.getItem('fash_user_type');\r\n    if(uType=='vendor')\r\n    {\r\n        this.vendor_id = localStorage.getItem('fash_user_id');\r\n    }\r\n    else\r\n    {\r\n        this.vendor_id = this.actRoute.snapshot.paramMap.get('shopId');\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n\r\n  doRefresh(event) {\r\n          console.log('Refreshing Start');\r\n          this.ngOnInit();\r\n          \r\n          setTimeout(() => {\r\n            console.log('Refreshing Ended');\r\n            event.target.complete();\r\n          }, 2000);\r\n        }\r\n\r\n\r\n\r\n    ionViewDidEnter() {\r\n      // the root left menu should be disabled on this page\r\n      this.getpackageReport();\r\n\r\n      this.getOrderslist();\r\n    }\r\n\r\n\r\n\r\n async getpackageReport() \r\n  {\r\n  this.shopId = localStorage.getItem('fash_user_id');\r\n\r\n    let catObj = { action: \"vendor_package\",vendor_id:this.shopId }\r\n    this.api.getPackageReport((response: any) => {\r\n        if(response.status == true) \r\n        {\r\n          this.pack_type = response.status;\r\n        } \r\n        else \r\n        {\r\n           this.router.navigate(['plans']);\r\n        }\r\n\r\n    }, catObj);\r\n  }\r\n\r\n  async getOrderslist()\r\n  {\r\n    let orderObj = { action:\"getOrdersList\",vendor_id:this.vendor_id}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.fetchOrderslist((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n            this.no_neworders1=true;\r\n            this.orders = response.orders;\r\n            if(this.orders.length==0)\r\n            {\r\n            this.no_neworders1=false;\r\n            }\r\n          }\r\n          else \r\n          {\r\n              this.no_neworders1=false;\r\n              \r\n          }\r\n      }, orderObj); \r\n  }\r\n\r\n\r\n  async getProceOrdersList()\r\n  {\r\n    let orderObj = { action:\"getProcessingOrdersList\",vendor_id:this.vendor_id}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.fetchOrderslist((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n\r\n            this.process_orders = response.orders;\r\n             this.no_processingorders1=true;\r\n          }\r\n          else \r\n          {\r\n            this.no_processingorders=true;\r\n            this.no_processingorders1=false;\r\n          }\r\n      }, orderObj); \r\n  }\r\n\r\n  async getTransmitOrdersList()\r\n  {\r\n    let orderObj = { action:\"getTransmitOrdersList\",vendor_id:this.vendor_id}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.fetchOrderslist((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n\r\n            this.transmit_orders = response.orders;\r\n            this.no_transitorders1=true;\r\n          }\r\n          else \r\n          {\r\n              this.no_transitorders=true;\r\n              this.no_transitorders1=false;\r\n          }\r\n      }, orderObj); \r\n  }\r\n\r\n  async getCompletedOrdersList()\r\n  {\r\n    let orderObj = { action:\"getCompletedOrdersList\",vendor_id:this.vendor_id}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.fetchOrderslist((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n\r\n            this.completed_orders = response.orders;\r\n            this.no_completeorders1=true;\r\n          }\r\n          else \r\n          {\r\n            this.no_completeorders=true;\r\n            this.no_completeorders1=false;\r\n          }\r\n      }, orderObj); \r\n  }\r\n\r\n  segmentChanged(event){\r\n    this.currentSegment = event.target.value;\r\n  }\r\n\r\n  showOrder(chk)\r\n  {\r\n    if(chk=='neworder')\r\n    {\r\n        this.new_order=true;\r\n        this.processing_order=false;\r\n        this.transmit_order=false;\r\n        this.completedorder=false;\r\n        this.getOrderslist();\r\n        \r\n    }\r\n    else if(chk=='processing')\r\n    {\r\n        this.new_order=false;\r\n        this.processing_order=true;\r\n        this.transmit_order=false;\r\n        this.completedorder=false;\r\n        this.getProceOrdersList();\r\n    }\r\n    else if(chk=='intransit')\r\n    {\r\n        this.new_order=false;\r\n        this.processing_order=false;\r\n        this.transmit_order=true;\r\n        this.completedorder=false;\r\n        this.getTransmitOrdersList();\r\n    }\r\n    else if(chk=='completed')\r\n    {\r\n         this.new_order=false;\r\n        this.processing_order=false;\r\n        this.transmit_order=false;\r\n        this.completedorder=true;\r\n        this.getCompletedOrdersList();\r\n    }\r\n  }\r\n\r\n  goOrderDetails(oid)\r\n  {\r\n      this.router.navigate(['orderdetails', { oid: oid }]);\r\n  }\r\n\r\n  async aceptOrder(orderid)\r\n  {\r\n      let aObj = { action:\"acceptOrder\",vendor_id:this.vendor_id,orderid:orderid}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.doacceptOrder((response: any) => {\r\n        loading.dismiss();\r\n\r\n          if (response.status == true) \r\n          {\r\n\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n           \r\n                    this.getOrderslist();\r\n            this.getProceOrdersList();\r\n            this.new_order=false;\r\n            this.processing_order=true;\r\n            this.transmit_order=false;\r\n            this.completedorder=false;\r\n             \r\n            this.selectOrder='processing';\r\n          }\r\n          else \r\n          {\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n          }\r\n      }, aObj); \r\n  }\r\n\r\nasync pickupOrder(orderid)\r\n  {\r\n\r\n      let aObj = { action:\"confirm_pickup\",vendor_id:this.vendor_id,orderid:orderid}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.confirmPickup((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n            \r\n            \r\n            this.new_order=false;\r\n            this.processing_order=false;\r\n            this.transmit_order=true;\r\n            this.completedorder=false;\r\n            this.getTransmitOrdersList();\r\n            this.selectOrder='intransit';\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n            \r\n          }\r\n          else \r\n          {\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n          }\r\n      }, aObj); \r\n  }\r\n\r\n\r\n  async confirmdelivery(orderid)\r\n  {\r\n  const modal = await this.modalController.create({\r\n          component: SelectdeliveryBoyPage,\r\n          componentProps: {vendor_id:this.vendor_id,orderid:orderid}\r\n        });\r\n        modal.onDidDismiss()\r\n          .then((data) => {\r\n            this.ngOnInit();\r\n          });\r\n    await modal.present();\r\n  }\r\n\r\n\r\n  async cancelOrder(orderid)\r\n  {\r\n      let caObj = { action:\"cancelOrder\",vendor_id:this.vendor_id,orderid:orderid}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.docancelOrder((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n            this.getOrderslist();\r\n          }\r\n          else \r\n          {\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n          }\r\n      }, caObj); \r\n  }\r\n}\r\n"]}