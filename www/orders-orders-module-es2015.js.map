{"version":3,"sources":["./src/app/orders/orders.page.html","./src/app/orders/orders-routing.module.ts","./src/app/orders/orders.module.ts","./src/app/orders/orders.page.scss","./src/app/orders/orders.page.ts"],"names":[],"mappings":"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","file":"orders-orders-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar style=\\\"--background: #05274d;color: #fff;\\\">\\r\\n    <ion-menu-button defaultHref slot=\\\"start\\\"></ion-menu-button>\\r\\n    <ion-title>Orders</ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-segment scrollable [(ngModel)]=\\\"selectOrder\\\" name=\\\"selectOrder\\\">\\r\\n    <ion-segment-button value=\\\"pending\\\" (click)=\\\"showOrder('neworder')\\\">\\r\\n      <ion-icon name=\\\"reader-outline\\\" style=\\\"margin: 4px;\\\"></ion-icon>\\r\\n      New Orders\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"processing\\\" (click)=\\\"showOrder('processing')\\\">\\r\\n      <ion-icon name=\\\"ellipsis-horizontal-circle-outline\\\" style=\\\"margin: 4px;\\\"></ion-icon>\\r\\n      Processing\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"intransit\\\" (click)=\\\"showOrder('intransit')\\\">\\r\\n      <ion-icon name=\\\"ellipsis-horizontal-circle-outline\\\" style=\\\"margin: 4px;\\\"></ion-icon>\\r\\n      In-Transit\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"completed\\\" (click)=\\\"showOrder('completed')\\\">\\r\\n      <ion-icon name=\\\"checkmark-circle\\\" style=\\\"margin: 4px;\\\"></ion-icon>\\r\\n      History\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n<ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"chevron-down-circle-outline\\\"\\r\\n      pullingText=\\\"Pull to refresh\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"Refreshing...\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <!-- <div  >\\r\\n    <div>\\r\\n    <ion-card >\\r\\n      <ion-card-content >\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">#4445555</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">23-09-2034</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">online</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">frttg</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">active</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;55555</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"2\\\"></ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button color=\\\"secondary\\\" (click)=\\\"aceptOrder(ord.id)\\\">Accept</ion-button>\\r\\n          </ion-col>\\r\\n\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button  color=\\\"danger\\\" (click)=\\\"cancelOrder(ord.id)\\\">Cancel</ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"2\\\"></ion-col>\\r\\n     </ion-row>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n    </div>\\r\\n  </div> -->\\r\\n\\r\\n  <div  *ngIf=\\\"new_order==true\\\">\\r\\n    <div *ngIf=\\\"no_neworders1==true\\\">\\r\\n    <ion-card *ngFor=\\\"let ord of orders\\\" >\\r\\n      <ion-card-content >\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.id}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.created_date}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.payment_type}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.payment_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.service_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row (click)=\\\"goOrderDetails(ord.id)\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;{{ord.amount}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row *ngIf=\\\"ord.is_store=='yes'\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Pick Up the Store</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{ord.is_store}}</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        \\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"2\\\"></ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button color=\\\"secondary\\\" (click)=\\\"aceptOrder(ord.id)\\\">Accept</ion-button>\\r\\n          </ion-col>\\r\\n\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button  color=\\\"danger\\\" (click)=\\\"cancelOrder(ord.id)\\\">Cancel</ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"2\\\"></ion-col>\\r\\n     </ion-row>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n    </div>\\r\\n     <ion-card *ngIf=\\\"no_neworders1==false\\\">\\r\\n         <h3 style=\\\"text-align: center;color: #e44424;font-size:16px;\\\">No Orders</h3>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n   <div *ngIf=\\\"processing_order==true\\\">\\r\\n    <div *ngIf=\\\"no_processingorders1==true\\\">\\r\\n    <ion-card *ngFor=\\\"let pord of process_orders\\\">\\r\\n      <ion-card-content>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.id}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.created_date}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.payment_type}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.payment_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.service_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;{{pord.amount}}</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row *ngIf=\\\"pord.is_store=='yes'\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Pick Up the Store</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{pord.is_store}}</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button color=\\\"secondary\\\" (click)=\\\"pickupOrder(pord.id)\\\">Pick up Order</ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button  color=\\\"danger\\\"  (click)=\\\"goOrderDetails(pord.id)\\\">View</ion-button>\\r\\n          </ion-col>\\r\\n          \\r\\n     </ion-row>\\r\\n\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n    <ion-card *ngIf=\\\"no_processingorders1==false\\\">\\r\\n         <h3 style=\\\"text-align: center;color: #e44424;font-size:16px;\\\">No Processing Orders</h3>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"transmit_order==true\\\">\\r\\n    <div *ngIf=\\\"no_transitorders1==true\\\">\\r\\n      \\r\\n    <ion-card *ngFor=\\\"let tord of transmit_orders\\\">\\r\\n      <ion-card-content>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.id}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.created_date}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.payment_type}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.payment_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.service_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;{{tord.amount}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row *ngIf=\\\"tord.is_store=='yes'\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Pick Up the Store</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{tord.is_store}}</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n         <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button color=\\\"secondary\\\" (click)=\\\"confirmdelivery(tord.id)\\\">Complete Order</ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"2\\\">\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-button  color=\\\"danger\\\"  (click)=\\\"goOrderDetails(tord.id)\\\">View</ion-button>\\r\\n          </ion-col>\\r\\n         </ion-row>\\r\\n\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n    </div>\\r\\n    <ion-card *ngIf=\\\"no_transitorders1==false\\\">\\r\\n         <h3 style=\\\"text-align: center;color: #e44424;font-size:16px;\\\">No In-Transit Orders</h3>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"completedorder==true\\\">\\r\\n    <div *ngIf=\\\"no_completeorders1==true\\\">\\r\\n\\r\\n    <ion-card *ngFor=\\\"let cord of completed_orders\\\">\\r\\n      <ion-card-content  (click)=\\\"goOrderDetails(cord.id)\\\">\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">OrderId</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.id}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Date</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.created_date}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Type</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.payment_type}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Payment Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.payment_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Order Status</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.service_status}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Amount</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">&#8377;{{cord.amount}}</ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row *ngIf=\\\"cord.is_store=='yes'\\\">\\r\\n          <ion-col class=\\\"orderInfoKey\\\">Pick Up the Store</ion-col>\\r\\n          <ion-col style=\\\"text-align:right;\\\">{{cord.is_store}}</ion-col>\\r\\n        </ion-row>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n    <ion-card *ngIf=\\\"no_completeorders1==false\\\">\\r\\n         <h3 style=\\\"text-align: center;color: #e44424;font-size:16px;\\\">No Completed Orders</h3>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n \\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OrdersPage } from './orders.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrdersPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrdersPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OrdersPageRoutingModule } from './orders-routing.module';\r\n\r\nimport { OrdersPage } from './orders.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    OrdersPageRoutingModule\r\n  ],\r\n  declarations: [OrdersPage]\r\n})\r\nexport class OrdersPageModule {}\r\n","export default \"ion-segment {\\n  --color: #040404;\\n  /* height: 30px; */\\n  border-bottom: 1px solid #05274d6e;\\n  font-size: 12px;\\n}\\n\\nion-segment-button {\\n  --color: #0e0e0e;\\n  --indicator-color: #e44424;\\n  --background-checked: #ffffff;\\n  --color-checked: #e44424;\\n  --indicator-height: 3px;\\n  /* min-height: 30px; */\\n  text-transform: capitalize;\\n  --padding-bottom: 10px;\\n  --padding-top: 5px;\\n  font-size: 12px;\\n}\\n\\n.orderInfoKey {\\n  font-weight: bold;\\n  color: black;\\n  font-size: 13px;\\n}\\n\\n.orderData {\\n  text-align: right;\\n  color: black;\\n  font-size: 13px;\\n}\\n\\n.vendor-head {\\n  font-size: 16px;\\n  font-weight: 600;\\n  padding-inline: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3JkZXJzL0Q6XFxpb25pY3Byb2plY3RzXFxvZmZrZXRfdmVuZG9yYXBwX2lvbmljdjUvc3JjXFxhcHBcXG9yZGVyc1xcb3JkZXJzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvb3JkZXJzL29yZGVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0NBQUE7RUFDQSxlQUFBO0FDQUY7O0FERUE7RUFDRSxnQkFBQTtFQUNBLDBCQUFBO0VBQ0EsNkJBQUE7RUFDQSx3QkFBQTtFQUNBLHVCQUFBO0VBQ0Esc0JBQUE7RUFDQSwwQkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FDQ0Y7O0FEQ0E7RUFDTSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDRU47O0FEQUE7RUFDRSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDR0Y7O0FEREE7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQ0lGIiwiZmlsZSI6InNyYy9hcHAvb3JkZXJzL29yZGVycy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tc2VnbWVudHtcclxuICAvLyAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChicm93biAsIGJyb3duKTsgXHJcbiAgLS1jb2xvcjogIzA0MDQwNDtcclxuICAvKiBoZWlnaHQ6IDMwcHg7ICovXHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwNTI3NGQ2ZTtcclxuICBmb250LXNpemU6MTJweDtcclxufVxyXG5pb24tc2VnbWVudC1idXR0b257XHJcbiAgLS1jb2xvcjogIzBlMGUwZTtcclxuICAtLWluZGljYXRvci1jb2xvcjogI2U0NDQyNDtcclxuICAtLWJhY2tncm91bmQtY2hlY2tlZDogI2ZmZmZmZjtcclxuICAtLWNvbG9yLWNoZWNrZWQ6ICNlNDQ0MjQ7XHJcbiAgLS1pbmRpY2F0b3ItaGVpZ2h0OiAzcHg7XHJcbiAgLyogbWluLWhlaWdodDogMzBweDsgKi9cclxuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAtLXBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gIC0tcGFkZGluZy10b3A6IDVweDtcclxuICBmb250LXNpemU6MTJweDtcclxufVxyXG4ub3JkZXJJbmZvS2V5e1xyXG4gICAgICBmb250LXdlaWdodDogYm9sZDsgICAgIFxyXG4gICAgICBjb2xvcjpibGFjazsgICBcclxuICAgICAgZm9udC1zaXplOjEzcHg7ICBcclxufVxyXG4ub3JkZXJEYXRhe1xyXG4gIHRleHQtYWxpZ246cmlnaHQ7XHJcbiAgY29sb3I6YmxhY2s7XHJcbiAgZm9udC1zaXplOjEzcHg7XHJcbn1cclxuLnZlbmRvci1oZWFke1xyXG4gIGZvbnQtc2l6ZToxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OjYwMDtcclxuICBwYWRkaW5nLWlubGluZTowcHg7XHJcbn0iLCJpb24tc2VnbWVudCB7XG4gIC0tY29sb3I6ICMwNDA0MDQ7XG4gIC8qIGhlaWdodDogMzBweDsgKi9cbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwNTI3NGQ2ZTtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG5pb24tc2VnbWVudC1idXR0b24ge1xuICAtLWNvbG9yOiAjMGUwZTBlO1xuICAtLWluZGljYXRvci1jb2xvcjogI2U0NDQyNDtcbiAgLS1iYWNrZ3JvdW5kLWNoZWNrZWQ6ICNmZmZmZmY7XG4gIC0tY29sb3ItY2hlY2tlZDogI2U0NDQyNDtcbiAgLS1pbmRpY2F0b3ItaGVpZ2h0OiAzcHg7XG4gIC8qIG1pbi1oZWlnaHQ6IDMwcHg7ICovXG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAtLXBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAtLXBhZGRpbmctdG9wOiA1cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLm9yZGVySW5mb0tleSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cblxuLm9yZGVyRGF0YSB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cblxuLnZlbmRvci1oZWFkIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBwYWRkaW5nLWlubGluZTogMHB4O1xufSJdfQ== */\";","import { Component, OnInit,ViewChild  } from '@angular/core';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { ModalController, Platform, ActionSheetController, LoadingController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UtilService } from 'src/app/services/util.service';\r\n\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\nimport { IonContent } from '@ionic/angular';\r\nimport { SelectdeliveryBoyPage } from '../selectdelivery-boy/selectdelivery-boy.page';\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.page.html',\r\n  styleUrls: ['./orders.page.scss'],\r\n})\r\nexport class OrdersPage implements OnInit {\r\n  currentSegment = 'pending';\r\n  orders:any;\r\n  new_order:any;\r\n  processing_order:any;\r\n  transmit_order:any;\r\n  completedorder:any;\r\n  process_orders:any;\r\n  vendor_id:any;\r\n  selectOrder:any;\r\n  transmit_orders:any;\r\n  completed_orders:any;\r\n  no_neworders:any;\r\n  no_processingorders:any;\r\n  no_transitorders:any;\r\n  no_completeorders:any;\r\n  no_neworders1:any;\r\n  no_processingorders1:any;\r\n  no_transitorders1:any;\r\n  no_completeorders1:any;\r\n   pack_type:any;\r\n   shopId:any;\r\n  constructor(private camera: Camera, private util: UtilService, private router: Router, private actRoute: ActivatedRoute,\r\n    private loadingCtrl: LoadingController, private actionSheetController: ActionSheetController,\r\n    private file: File, private api: ApiService, public modalController: ModalController) { \r\n          this.no_neworders=false;\r\n          this.no_processingorders=false;\r\n          this.no_transitorders=false;\r\n          this.no_completeorders=false;\r\n    }\r\n\r\n  ngOnInit() \r\n  {\r\n    this.selectOrder='pending';\r\n    this.new_order=true;\r\n    this.processing_order=false;\r\n    this.transmit_order=false;\r\n    this.completedorder=false;\r\n    let uType = localStorage.getItem('fash_user_type');\r\n    if(uType=='vendor')\r\n    {\r\n        this.vendor_id = localStorage.getItem('fash_user_id');\r\n    }\r\n    else\r\n    {\r\n        this.vendor_id = this.actRoute.snapshot.paramMap.get('shopId');\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n\r\n  doRefresh(event) {\r\n          console.log('Refreshing Start');\r\n          this.ngOnInit();\r\n          \r\n          setTimeout(() => {\r\n            console.log('Refreshing Ended');\r\n            event.target.complete();\r\n          }, 2000);\r\n        }\r\n\r\n\r\n\r\n    ionViewDidEnter() {\r\n      // the root left menu should be disabled on this page\r\n      this.getpackageReport();\r\n\r\n      this.getOrderslist();\r\n    }\r\n\r\n\r\n\r\n async getpackageReport() \r\n  {\r\n  this.shopId = localStorage.getItem('fash_user_id');\r\n\r\n    let catObj = { action: \"vendor_package\",vendor_id:this.shopId }\r\n    this.api.getPackageReport((response: any) => {\r\n        if(response.status == true) \r\n        {\r\n          this.pack_type = response.status;\r\n        } \r\n        else \r\n        {\r\n           this.router.navigate(['plans']);\r\n        }\r\n\r\n    }, catObj);\r\n  }\r\n\r\n  async getOrderslist()\r\n  {\r\n    let orderObj = { action:\"getOrdersList\",vendor_id:this.vendor_id}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.fetchOrderslist((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n            this.no_neworders1=true;\r\n            this.orders = response.orders;\r\n            if(this.orders.length==0)\r\n            {\r\n            this.no_neworders1=false;\r\n            }\r\n          }\r\n          else \r\n          {\r\n              this.no_neworders1=false;\r\n              \r\n          }\r\n      }, orderObj); \r\n  }\r\n\r\n\r\n  async getProceOrdersList()\r\n  {\r\n    let orderObj = { action:\"getProcessingOrdersList\",vendor_id:this.vendor_id}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.fetchOrderslist((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n\r\n            this.process_orders = response.orders;\r\n             this.no_processingorders1=true;\r\n          }\r\n          else \r\n          {\r\n            this.no_processingorders=true;\r\n            this.no_processingorders1=false;\r\n          }\r\n      }, orderObj); \r\n  }\r\n\r\n  async getTransmitOrdersList()\r\n  {\r\n    let orderObj = { action:\"getTransmitOrdersList\",vendor_id:this.vendor_id}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.fetchOrderslist((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n\r\n            this.transmit_orders = response.orders;\r\n            this.no_transitorders1=true;\r\n          }\r\n          else \r\n          {\r\n              this.no_transitorders=true;\r\n              this.no_transitorders1=false;\r\n          }\r\n      }, orderObj); \r\n  }\r\n\r\n  async getCompletedOrdersList()\r\n  {\r\n    let orderObj = { action:\"getCompletedOrdersList\",vendor_id:this.vendor_id}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.fetchOrderslist((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n\r\n            this.completed_orders = response.orders;\r\n            this.no_completeorders1=true;\r\n          }\r\n          else \r\n          {\r\n            this.no_completeorders=true;\r\n            this.no_completeorders1=false;\r\n          }\r\n      }, orderObj); \r\n  }\r\n\r\n  segmentChanged(event){\r\n    this.currentSegment = event.target.value;\r\n  }\r\n\r\n  showOrder(chk)\r\n  {\r\n    if(chk=='neworder')\r\n    {\r\n        this.new_order=true;\r\n        this.processing_order=false;\r\n        this.transmit_order=false;\r\n        this.completedorder=false;\r\n        this.getOrderslist();\r\n        \r\n    }\r\n    else if(chk=='processing')\r\n    {\r\n        this.new_order=false;\r\n        this.processing_order=true;\r\n        this.transmit_order=false;\r\n        this.completedorder=false;\r\n        this.getProceOrdersList();\r\n    }\r\n    else if(chk=='intransit')\r\n    {\r\n        this.new_order=false;\r\n        this.processing_order=false;\r\n        this.transmit_order=true;\r\n        this.completedorder=false;\r\n        this.getTransmitOrdersList();\r\n    }\r\n    else if(chk=='completed')\r\n    {\r\n         this.new_order=false;\r\n        this.processing_order=false;\r\n        this.transmit_order=false;\r\n        this.completedorder=true;\r\n        this.getCompletedOrdersList();\r\n    }\r\n  }\r\n\r\n  goOrderDetails(oid)\r\n  {\r\n      this.router.navigate(['orderdetails', { oid: oid }]);\r\n  }\r\n\r\n  async aceptOrder(orderid)\r\n  {\r\n      let aObj = { action:\"acceptOrder\",vendor_id:this.vendor_id,orderid:orderid}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.doacceptOrder((response: any) => {\r\n        loading.dismiss();\r\n\r\n          if (response.status == true) \r\n          {\r\n\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n           \r\n                    this.getOrderslist();\r\n            this.getProceOrdersList();\r\n            this.new_order=false;\r\n            this.processing_order=true;\r\n            this.transmit_order=false;\r\n            this.completedorder=false;\r\n             \r\n            this.selectOrder='processing';\r\n          }\r\n          else \r\n          {\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n          }\r\n      }, aObj); \r\n  }\r\n\r\nasync pickupOrder(orderid)\r\n  {\r\n\r\n      let aObj = { action:\"confirm_pickup\",vendor_id:this.vendor_id,orderid:orderid}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.confirmPickup((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n            \r\n            \r\n            this.new_order=false;\r\n            this.processing_order=false;\r\n            this.transmit_order=true;\r\n            this.completedorder=false;\r\n            this.getTransmitOrdersList();\r\n            this.selectOrder='intransit';\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n            \r\n          }\r\n          else \r\n          {\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n          }\r\n      }, aObj); \r\n  }\r\n\r\n\r\n  async confirmdelivery(orderid)\r\n  {\r\n  const modal = await this.modalController.create({\r\n          component: SelectdeliveryBoyPage,\r\n          componentProps: {vendor_id:this.vendor_id,orderid:orderid}\r\n        });\r\n        modal.onDidDismiss()\r\n          .then((data) => {\r\n            this.ngOnInit();\r\n          });\r\n    await modal.present();\r\n  }\r\n\r\n\r\n  async cancelOrder(orderid)\r\n  {\r\n      let caObj = { action:\"cancelOrder\",vendor_id:this.vendor_id,orderid:orderid}\r\n                  let loading = await this.loadingCtrl.create({\r\n                    spinner:'circles',\r\n                    message: 'Please wait',\r\n                  });\r\n                  loading.present();\r\n      this.api.docancelOrder((response: any) => {\r\n        loading.dismiss();\r\n          if (response.status == true) \r\n          {\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n            this.getOrderslist();\r\n          }\r\n          else \r\n          {\r\n            this.util.presentToast(response.message, 'danger', 'bottom', 2500);\r\n          }\r\n      }, caObj); \r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}